<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: home | BLog]]></title>
  <link href="http://bleonard.github.io/blog/categories/home/atom.xml" rel="self"/>
  <link href="http://bleonard.github.io/"/>
  <updated>2017-02-25T22:05:39-08:00</updated>
  <id>http://bleonard.github.io/</id>
  <author>
    <name><![CDATA[Brian Leonard]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Teaching CSS]]></title>
    <link href="http://bleonard.github.io/blog/2015/08/01/teaching-css/"/>
    <updated>2015-08-01T00:00:00-07:00</updated>
    <id>http://bleonard.github.io/blog/2015/08/01/teaching-css</id>
    <content type="html"><![CDATA[<p>To my surprise, my daughter asked me if I would teach her how to build a web site today. She more or less wants a blog to keep track of what is going on at a recess club she made at school: regular notes, calendar, things like that.</p>

<p>I had her draw out on paper what she wanted to build. It was interesting to see her reinvent the concept of a blog. For example, her first iteration only showed the post from "Today." I asked her how you would see yesterday's post. So she add a "Today" and a "Yesterday" button. So I asked her how to see the post from last week. Her answer was approximately, "Well, they just need to keep up!" However, she eventually conceded to a "Previous" and "Next" button.</p>

<p>Even on one's first encounter, it seems that it's impossible to teach this stuff without also teaching about concessions:</p>

<p><strong>Daughter</strong>: OK, here's a picture of what I want to make (shows few buttons on top, content underneath)</p>

<p><strong>Dad</strong>: (Talks about closing and opening tags, gets a word on the page)</p>

<p><strong>Daughter</strong>: Make it bigger.</p>

<p><strong>Dad</strong>: (adds <code>h1</code> tag)</p>

<p><strong>Daughter</strong>: Add the other buttons.</p>

<p><strong>Dad</strong>: (adds two more <code>h1</code> tags)</p>

<p><strong>Daughter</strong>: Why are they not next to each other?</p>

<p><strong>Dad</strong>: (mumbles about <code>ul</code> and <code>li</code> - makes them a list)</p>

<p><strong>Daughter</strong>: Now they are too small again and have those dots.</p>

<p><strong>Dad</strong>: We need to "style" them. Let's remove the dots. (inlines styles: <code>list-style-type:none;</code>)</p>

<p><strong>Daughter</strong>: OK. Now make it bigger again.</p>

<p><strong>Dad</strong>: (adds <code>font-size:50px;</code> to the first one) There.</p>

<p><strong>Daughter</strong>: What about the other ones?</p>

<p><strong>Dad</strong>: How do you think we make them bigger too?</p>

<p><strong>Daughter</strong>: (eventually adds inline style to other ones). Perfect! Now put them next to each other.</p>

<p><strong>Dad</strong>: (adds <code>display:inline;</code>)</p>

<p><strong>Daughter</strong>: You're amazing! Ok, now make the background gold.</p>

<p><strong>Dad</strong>: (<code>background-color:Gold</code>)</p>

<p><strong>Daughter</strong>: That's yellow.</p>

<p><strong>Dad</strong>: Here, look at <a href="http://www.w3schools.com/cssref/css_colornames.asp">this</a>.</p>

<p><strong>Daughter</strong>: Wow, so many choices! (picks GoldenRod)</p>

<p><strong>Dad</strong>: (shows how to change to that)</p>

<p><strong>Daughter</strong>: Perfect! Now make the buttons this one (points to DarkTorquise)</p>

<p><strong>Dad</strong>: (adds links makes them <code>background-color:DarkTurquoise;padding: 10px;</code>)</p>

<p><strong>Daughter</strong>: OK, let's add the main words. In a white box.</p>

<p><strong>Dad</strong>: (adds <code>div</code> with <code>background-color:White;</code> and a few words)</p>

<p><strong>Daughter</strong>: Why is it so small?</p>

<p><strong>Dad</strong>: We need more words. (pastes Lorem Ipsum)</p>

<p><strong>Daughter</strong>: (not impressed) It needs to be bigger and in the middle.</p>

<p><strong>Dad</strong>: (adds <code>padding:20px;margin-left:auto;margin-right:auto;</code> to horizontally center content) How about that?</p>

<p><strong>Daughter</strong>: Also in the middle between the top and bottom.</p>

<p><strong>Dad</strong>: (sighs heavily. googles "vertical center div css" for the 100th time. reads for 7 minutes.)</p>

<p><strong>Daughter</strong>: What's wrong?</p>

<p><strong>Dad</strong>: Are you sure you don't want it near the top?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Playing Work]]></title>
    <link href="http://bleonard.github.io/blog/2013/01/02/playing-work/"/>
    <updated>2013-01-02T19:59:00-08:00</updated>
    <id>http://bleonard.github.io/blog/2013/01/02/playing-work</id>
    <content type="html"><![CDATA[<p>We didn't go anywhere over the holidays and had a nice Christmas at home. It's possible that I'm incapable of taking a vacation at all, but this is particularly true when on a stay-cation. Other than Christmas day itself, I was coding on a normal schedule for most of the week.</p>

<p>My daughter (4.5) was around most of the week too, often with the normal babysitter that comes for my younger son. So all week, our house had me coding, my wife editing, and her hanging out with the babysitter. She even brought us lunch like it was restaurant including a fork wrapped up in a napkin.</p>

<p>On January 1st, I also took the day completely off and asked her what she wanted to play. "Not now, I'm working," she said. She was "playing work," which involved writing out a dense set of letters on white sheets of paper.</p>

<blockquote><p>"There is a lot to do and I have to work, even on family days."</p></blockquote>

<p>And she went back to scribbling like crazy. This all says something about me as a person and a parent. I'm not sure exactly what, but it's probably not good.</p>

<p>It hurts because I actually think I'm doing a pretty good job. I leave early (by engineer-at-startup standards) to have dinner and hang out with her and only work again after she is asleep. I'm not sure I could have more "balance" anyway. To me, the term suggests a healthy ratio between what you are forced to do because of work and the things of "normal life." I might be intrinsically unbalanced, but I feel lucky that my normal life has a lot of things that I love doing which centers mostly around building things for people. For better or worse, I'm thinking about this stuff all the time, anyway.</p>

<p>It likely comes with my being so visibly inaccessible all week. Regardless, I didn't have any profound realizations at that moment or anything. Instead, I decided to plant a behavioral seed for later.</p>

<blockquote><p>"I understand. I'll let you get to it. Let me know when you can play."</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Review: 2012]]></title>
    <link href="http://bleonard.github.io/blog/2012/12/31/review-2012/"/>
    <updated>2012-12-31T10:39:00-08:00</updated>
    <id>http://bleonard.github.io/blog/2012/12/31/review-2012</id>
    <content type="html"><![CDATA[<p>I honestly can't remember anything from January or even October very specifically. It sure felt like I was busy as we doubled the TaskRabbit engineering team and scaled the site to get a lot more stuff done for real people in the real world.</p>

<p>I can't even decide what the best way is to see what I did in January. I could look at my email or calendar, but I strive not to make those the center of my world. Maybe in Evernote. My git commits are probably a bit too granular, but maybe there is something in the aggregate.</p>

<p><img src="/images/posts/2012-review-impact.png"></p>

<p>Most striking is the almost non-existence of code between July and October. We were growing the team during this time and I made the conscious choice to try on more of an "engineering manager" role as opposed to a "tech lead" kind of role. Judging by the large spike in October, it's clear the experiment got cut short. Around this time, I made the biggest change of the year: transitioning from VP of Engineering to Chief Architect.</p>

<!-- more -->


<p>Yee, the new VP of Engineering once said to me, "The work-product of an engineer is code. The work-product of a manager is a team." I think about long-polling our message bus system while walking down the street. He thinks about things like that quote. It seems like the right move to me.</p>

<p>From the beginning of TaskRabbit more than three years ago, I've played various development, product, and managerial roles. I realized this year that I add the most value when close to the code. It probably says enough that I started writing this blog post and then immediately got derailed into making a <a href="https://github.com/bleonard/hubtime">tool</a> to aggregate a user's git commits across all repositories in order to make the graphs in this post.</p>

<p>I would guess that many engineers follow a similar trajectory wherein they code a bunch and eventually find themselves managing or leading a team of some sort. For example, I quit IBM to get back to coding rather than making various Powerpoint presentations. One of the great things about the culture we've built at TaskRabbit is that it allowed me to make that transition without going somewhere else. I did my best and am proud of the team and product we've built, but its time to build some more (and delete old) stuff to take this thing to the next level.</p>

<p>Architecturally, the most interesting change this year has been breaking up our monster Rails app into multiple ones. Much has been said on this topic, but each situation is so different that I'm sure there are some lessons in there that would be helpful to others. I'll be writing about those tactics and lessons in 2013 as we continue the journey.</p>

<p>Looking back for a moment, there are are will be plenty of technological benefits like scaling memory, boot-time, and cutting test-time. The main benefits so far are more team-related, though. By giving teams an independent codebase on which to iterate, they are able to innovate more for the customer and, at the same time, impact other teams less.</p>

<p><img src="/images/posts/2012-review-stacked.png"></p>

<p>You can see that change in the stacked version of this graph. I've removed all the labels and such but the red one is our core app. Over the year, less and less code went there and world became much more colorful. Also with my role change, it's interesting how there is more impact but less commits. As I went over the logs briefly, it became clear the reason: a majority of the changes in the first half of the year were small commits to keep the world on track with groundbreaking changes like "fixing intermittent failure in acceptance tests." Since the transition, it's been about writing new services that all our apps are sharing. That's a move in the right direction, I think.</p>

<p>On the personal front, we bought a house in Menlo Park and plan to stay there for a while. My wife is still a freelance editor and is now doing some consulting for a startup as well as on few books. My son turned one and is now running all over the place. My daughter turned four and will going to Kindergarten before I know it. What a world.</p>
]]></content>
  </entry>
  
</feed>
